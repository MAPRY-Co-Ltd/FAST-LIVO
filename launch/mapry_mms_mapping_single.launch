<launch>
	<!-- カスタム引数 -->
	<arg name="rviz" default="false" />
	<arg name="product" default="true" />
	<arg name="name_key" default="front_sample" />
	<arg name="lidar1" default="front" />
	<arg name="lidar1_scan_mode" default="0" /> <!-- 0: intensity, 1: RGB + intensity -->
	<arg name="is_usb_saving" default="false" /> <!-- USBへの定期保存 -->
	<arg name="bag" default = "false" />
	<arg name="coordinate_num" default="1"/>
	<arg name="version" default="1.0.0"/>

	<!-- LIVOX-ROS-DRIVER 引数 -->
	<arg name="lvx_file_path" default="livox_test.lvx"/>
	<arg name="bd_list" default="100000000000000"/>
	<arg name="xfer_format" default="1"/>
	<arg name="multi_topic" default="0"/>
	<arg name="data_src" default="0"/>
	<arg name="publish_freq" default="10.0"/>
	<arg name="output_type" default="0"/>
	<arg name="cmdline_arg" default="$(arg bd_list)"/>
	<arg name="msg_frame_id" default="livox_frame"/>
	<arg name="lidar_bag" default="true"/>
	<arg name="imu_bag" default="true"/>
	
	<node pkg="scan_data_archive" type="version_saver.py" name="version_saver" output="screen">
		<param name="name_key" type="string" value="$(arg name_key)"/>
		<param name="version" value="$(arg version)"/>
		<param name="scan_mode" value="$(arg lidar1_scan_mode)"/>
		<rosparam file="$(find scan_data_archive)/config/params.yaml"/>
    </node>
	
	<group ns="$(arg lidar1)">
		<!-- Master -->

		<!-- FAST-LIVO -->
		<node pkg="fast_livo" type="fastlivo_mapping" name="laserMapping" output="screen" >
			<rosparam file="$(find fast_livo)/config/camera_pinhole_resize_$(arg lidar1).yaml" />
			<rosparam file="$(find fast_livo)/config/mapping_filter_$(arg lidar1_scan_mode).yaml" />
			<rosparam file="$(find fast_livo)/config/avia_resize_$(arg lidar1).yaml" />
			<param name="name_key" type="string" value="$(arg name_key)"/>			
			<param name="img_enable" value="$(arg lidar1_scan_mode)"/>
			<param name="lidar_position" type="string" value="$(arg lidar1)"/>
		</node>

		<!-- カメラ -->
		<node pkg="Image_Capture" type="baumer_camera_capture.py" name="baumer_camera_capture" output="screen">
			<rosparam command="load" file="$(find Image_Capture)/config/camera_params_$(arg lidar1).yaml"/>
		</node>
		<node pkg="image_transport" type="republish" name="republish" args="compressed in:=/$(arg lidar1)_camera/image raw out:=/$(arg lidar1)_camera/image" output="screen"/>

		<!-- カメラ画像保存 -->
		<!-- <node pkg="Image_Capture" type="image_saver.py" name="image_saver" output="screen">
			<param name="name_key" type="string" value="$(arg name_key)"/>
			<param name="lidar_position" value="$(arg lidar1)"/>
			<rosparam command="load" file="$(find gnss_client)/config/params.yaml"/>
			<rosparam command="load" file="$(find Image_Capture)/config/camera_params_$(arg lidar1).yaml"/>
			<rosparam file="$(find fast_livo)/config/camera_pinhole_resize_$(arg lidar1).yaml" />
			<rosparam command="load" file="$(find fast_livo)/config/avia_resize_$(arg lidar1).yaml" />
		</node> -->
		<!-- 動画保存 -->
		<node pkg="Image_Capture" type="video_saver.py" name="video_saver" output="screen">
			<param name="name_key" type="string" value="$(arg name_key)"/>
			<param name="lidar_position" value="$(arg lidar1)"/>
			<rosparam file="$(find gnss_client)/config/params.yaml"/>
			<rosparam file="$(find Image_Capture)/config/camera_params_$(arg lidar1).yaml"/>
			<rosparam file="$(find fast_livo)/config/camera_pinhole_resize_$(arg lidar1).yaml" />
			<rosparam file="$(find fast_livo)/config/avia_resize_$(arg lidar1).yaml" />
		</node>

		<!-- 自動再起動 -->
		<!-- respawn="true" -->

		<!-- LIVOX-ROS-DRIVER -->
		<param name="xfer_format" value="$(arg xfer_format)"/>
		<param name="multi_topic" value="$(arg multi_topic)"/>
		<param name="data_src" value="$(arg data_src)"/>
		<param name="publish_freq" type="double" value="$(arg publish_freq)"/>
		<param name="output_data_type" value="$(arg output_type)"/>
		<param name="cmdline_str" type="string" value="$(arg bd_list)"/>
		<param name="cmdline_file_path" type="string" value="$(arg lvx_file_path)"/>
		<param name="user_config_path" type="string" value="$(find livox_ros_driver)/config/livox_lidar_config.json"/>
		<param name="frame_id" type="string" value="$(arg msg_frame_id)"/>
		<param name="enable_lidar_bag" type="bool" value="$(arg lidar_bag)"/>
		<param name="enable_imu_bag" type="bool" value="$(arg imu_bag)"/>

		<node name="livox_lidar_publisher" pkg="livox_ros_driver"
			type="livox_ros_driver_node" required="true"
			output="screen" args="$(arg cmdline_arg)">
				<remap from="/$(arg lidar1)/livox/lidar" to="/livox/lidar_$(arg lidar1)" />
				<remap from="/$(arg lidar1)/livox/imu" to="/livox/imu_$(arg lidar1)" />
		</node>

		<!-- USBへ転送 -->
		<group if="$(arg is_usb_saving)">
			<node pkg="scan_data_archive" type="scan_data_usb_saving.py" name="scan_data_usb_saving" output="screen">
				<param name="name_key" type="string" value="$(arg name_key)"/>
				<param name="run_periodically" value="true"/>
				<rosparam command="load" file="$(find scan_data_archive)/config/params.yaml"/>
    		</node>
		</group>

		<!-- GNSSデータ保存 -->
		<node pkg="gnss_client" type="gnss_stream_saver.py" name="gnss_stream_saver" output="screen">
			<param name="name_key" type="string" value="$(arg name_key)"/>
			<param name="lidar_position" value="$(arg lidar1)"/>
			<param name="coordinate_num" value="$(arg coordinate_num)"/>
			<rosparam command="load" file="$(find gnss_client)/config/params.yaml"/>
			<rosparam command="load" file="$(find gnss_client)/config/rover.yaml"/>
		</node>

		<!-- パラメータの保存-->
		<node pkg="scan_data_archive" type="parameter_saver.py" name="parameter_saver" output="screen">
			<param name="name_key" type="string" value="$(arg name_key)"/>
			<param name="lidar_position" value="$(arg lidar1)"/>
			<rosparam file="$(find scan_data_archive)/config/params.yaml"/>
		</node>
	</group>

	<!-- <group if="$(arg rviz)">
		<node launch-prefix="nice" pkg="rviz" type="rviz" name="rviz" args="-d $(find fast_livo)/rviz_cfg/loam_livox_rgb.rviz" />
	</group> -->

	<group if="$(arg bag)">
	  <node pkg="rosbag" type="record" name="record" args="-o $(find fast_livo)/bag/$(arg name_key) /livox/imu_front /livox/lidar_front /front_camera/image/compressed"/>
	</group>

	launch-prefix="gdb -ex run --args" launch-prefix="valgrind --leak-check=full --show-leak-kinds=all"
</launch> 	
